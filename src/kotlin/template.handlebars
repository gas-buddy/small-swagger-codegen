@file:Suppress("unused", "UnusedImport", "EnumEntryName", "RemoveRedundantQualifierName")

package com.gasbuddy.mobile.common.webservices.apis

import com.gasbuddy.mobile.common.interfaces.Jsonable
import com.gasbuddy.mobile.common.webservices.GBIORxWebServices
import com.google.gson.annotations.SerializedName
import io.reactivex.rxjava3.core.Observable
import io.reactivex.rxjava3.core.Single
import io.reactivex.rxjava3.schedulers.Schedulers
import retrofit2.Response
import retrofit2.Retrofit
import hu.akarnokd.rxjava3.retrofit.RxJava3CallAdapterFactory
import retrofit2.converter.gson.GsonConverterFactory
import retrofit2.http.*
import org.threeten.bp.OffsetDateTime
import okhttp3.MultipartBody

// @formatter:off
class {{{apiClassName}}} : GBIORxWebServices() {

    //region Companion
    companion object {
        @JvmStatic
        val api: API = createAPI(baseUrl = host, clazz = API::class.java)
    }
    //endregion


    //region Web Services
    interface API {
        {{#each methods}}

        /**
         * {{{description}}}
         {{#each params}}
         * @param {{{name}}} {{{description}}}
         {{/each}}
         * @return Single<{{{response.type}}}>
         */
        {{#if multipart}}
        @Multipart
        {{else}}
        @Headers("Content-Type:application/json"{{#if streaming}}, "Accept:text/event-stream", "Cache-Control:no-cache"{{/if}})
        {{/if}}
        @{{{capMethod}}}("{{{path}}}")
        {{#if streaming}}
        @Streaming
        {{/if}}
        @JvmSuppressWildcards
        fun {{{name}}}(
            @HeaderMap headerMap: Map<String, String>{{#if params.length}},{{/if}}
        {{#each params}}
            @{{{inCap}}}{{#isNotBodyOrPartParam this}}("{{{serverName}}}"){{/isNotBodyOrPartParam}} {{{name}}}: {{{type}}}{{#unless required}}? = null{{/unless}}{{~#unless @last}},{{/unless}}
        {{/each}}
        ) : {{#if streaming}}Observable{{else}}Single{{/if}}<{{{response.type}}}>
        {{/each}}
    }
    //endregion


    //region Models
    {{#each objectModels}}
    {{> modelClassTemplate}}

    {{/each}}
    //endregion

    //region Enums
    {{#each enumModels}}
    enum class {{{name}}} {
        {{#each values}}
        @SerializedName({{{value}}}) {{{uName}}}{{~#unless @last}},{{/unless}}
        {{/each}}
    }

    {{/each}}
    //endregion

}
