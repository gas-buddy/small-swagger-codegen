// tslint:disable
import type {
  EventSource,
  ResponseHeaders,
  ServiceCallPromise,
  SystemFetchResponse,
  AbortController,
  FetchConfig,
  FetchPerRequestOptions,
  RestApiErrorResponse,
  RestApiSuccessResponse,
} from 'rest-api-support';

{{#each enumModels}}
export type {{{name}}} = {{#each values}}{{{value}}}{{~#unless @last}} | {{/unless}}{{/each}};
{{/each}}

{{#each objectModels}}
{{> modelClassTemplate}}

{{/each}}
{{#each methods}}{{#if params.length}}
export interface {{{name}}}Arguments {
  {{#each params}}
  {{{name}}}{{#unless required}}?{{/unless}}: {{{type}}},
  {{/each}}
}
{{/if}}{{/each}}
export class {{{apiClassName}}} {
  constructor(configOrFunctionGeneratingConfig: FetchConfig);
{{#each methods}}

  /**
   * {{{description}}}
   *
  {{#each params}}
   * @parameter { {{{type}}} } {{{name}}}: {{{description}}}
  {{/each}}
   */
  {{{name}}}(request{{#unless params.length}}?{{/unless}}: {{#if params.length}}{{{name}}}Arguments{{else}}null | undefined{{/if}}, options?: FetchPerRequestOptions) : {{#if streaming}}EventSource{{else}}ServiceCallPromise<RestApiSuccessResponse<{{{response.type}}}> | RestApiErrorResponse>{{/if}};
{{/each}}
}

export default {{{apiClassName}}};
